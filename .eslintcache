[{"/home/joana/Documents/JoanaLearning/AWS/UserDataApp/user-data-app/src/reportWebVitals.js":"1","/home/joana/Documents/JoanaLearning/AWS/UserDataApp/user-data-app/src/containers/App.tsx":"2","/home/joana/Documents/JoanaLearning/AWS/UserDataApp/user-data-app/src/index.js":"3","/home/joana/Documents/JoanaLearning/AWS/UserDataApp/user-data-app/src/components/HomePage/HomePage.tsx":"4","/home/joana/Documents/JoanaLearning/AWS/UserDataApp/user-data-app/src/elements/Header.tsx":"5","/home/joana/Documents/JoanaLearning/AWS/UserDataApp/user-data-app/src/aws-exports.js":"6","/home/joana/Documents/JoanaLearning/AWS/UserDataApp/user-data-app/src/components/UserDataPage/UserDataPage.tsx":"7","/home/joana/Documents/JoanaLearning/AWS/UserDataApp/user-data-app/src/context/user.tsx":"8","/home/joana/Documents/JoanaLearning/AWS/UserDataApp/user-data-app/src/utils/accessData.tsx":"9"},{"size":362,"mtime":1610891644438,"results":"10","hashOfConfig":"11"},{"size":683,"mtime":1610897064507,"results":"12","hashOfConfig":"11"},{"size":658,"mtime":1610903895501,"results":"13","hashOfConfig":"11"},{"size":1586,"mtime":1611425156352,"results":"14","hashOfConfig":"11"},{"size":1220,"mtime":1610902903784,"results":"15","hashOfConfig":"11"},{"size":712,"mtime":1610896897726,"results":"16","hashOfConfig":"11"},{"size":6921,"mtime":1611427244029,"results":"17","hashOfConfig":"11"},{"size":1843,"mtime":1611425556593,"results":"18","hashOfConfig":"11"},{"size":1803,"mtime":1611426161172,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"mgwi9d",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/home/joana/Documents/JoanaLearning/AWS/UserDataApp/user-data-app/src/reportWebVitals.js",[],["41","42"],"/home/joana/Documents/JoanaLearning/AWS/UserDataApp/user-data-app/src/containers/App.tsx",[],["43","44"],"/home/joana/Documents/JoanaLearning/AWS/UserDataApp/user-data-app/src/index.js",[],"/home/joana/Documents/JoanaLearning/AWS/UserDataApp/user-data-app/src/components/HomePage/HomePage.tsx",[],"/home/joana/Documents/JoanaLearning/AWS/UserDataApp/user-data-app/src/elements/Header.tsx",[],"/home/joana/Documents/JoanaLearning/AWS/UserDataApp/user-data-app/src/aws-exports.js",[],"/home/joana/Documents/JoanaLearning/AWS/UserDataApp/user-data-app/src/components/UserDataPage/UserDataPage.tsx",[],"/home/joana/Documents/JoanaLearning/AWS/UserDataApp/user-data-app/src/context/user.tsx",["45"],"import React, { ReactNode } from 'react';\n\nenum EGender {\n    female = 0,\n    male\n}\n\n// ? Because they are not all used as props in SetCarButtons\nexport interface IUser {\n    userId?: number;\n    name?: string;\n    gender?: string;\n    amountCars?: number;\n    annualExpenses?: number;\n    carIndex: number\n}\n\nconst mockUser = {} as IUser;\nmockUser.userId = 1;\nmockUser.name = \"Joana\";\nmockUser.gender = \"\"\nmockUser.amountCars = 0;\nmockUser.carIndex = 0;\nmockUser.annualExpenses = 0;\n\ninterface IUserContexInterface {\n    user: IUser;\n    setUser: React.Dispatch<React.SetStateAction<IUser>>\n    setCarIdx: (index: number) => void\n    setUserData: (user: IUser) => void\n}\n\n// Create Context\nconst UserContext = React.createContext<IUserContexInterface>({\n    user: mockUser,\n    setUser: () => ({}),\n    setCarIdx: () => [],\n    setUserData: () => [],\n});\n\nexport interface Props {\n    children?: ReactNode;\n}\n\n// Create Context Provider\nexport default function UserProvider({ children }: Props) {\n    const [user, setUser] = React.useState(mockUser);\n\n    function setCarIdx(index: number) {\n        let userCopy = JSON.parse(JSON.stringify(user));\n        userCopy.carIndex = index;\n        setUser(userCopy);\n    }\n    function setUserData(user: IUser) {\n        console.log(user);\n        setUser(user);\n    }\n\n    const hook = {\n        user,\n        setUser,\n        setCarIdx,\n        setUserData\n    };\n\n    return <UserContext.Provider value={hook}>{children}</UserContext.Provider>;\n}\n\n\n// Function to access the User Context on other components:\nexport function useUserContext() {\n    return React.useContext<IUserContexInterface>(UserContext);\n}\n// the choice for useContext instead of Consumer refer to:\n// https://stackoverflow.com/questions/56816374/context-consumer-vs-usecontext-to-access-values-passed-by-context-provider\n\n\n","/home/joana/Documents/JoanaLearning/AWS/UserDataApp/user-data-app/src/utils/accessData.tsx",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":3,"column":6,"nodeType":"52","messageId":"53","endLine":3,"endColumn":13},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"@typescript-eslint/no-unused-vars","'EGender' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]